<?php

use Drupal\Core\Url;

/**
 * Implements hook_theme().

 */
function my_module_theme($existing, $type, $theme, $path) {

  return [
    'my-template' => [
      'variables' => ['test_var' => NULL],
    ],
  ];
}


function my_module_page_attachments(array &$page)
{
	$page['#attached']['library'][] = 'my_module/custom_css';
}

// function my_module_element_info_alter(array &$types) {
  
//     $types['table']['#attached']['library'][] = 'my_module/custom_css';
  
// }

// function my_module_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
//   /* @var Drupal\Core\Entity\FieldableEntityInterface $entity */
//   $formObject = $form_state->getFormObject();
//   if ($formObject instanceof \Drupal\Core\Entity\EntityFormInterface) {
//     $entity = $formObject->getEntity();
//     if (
//       $entity->getEntityTypeId() === 'node'
//       && in_array($entity->bundle(), ['organisation', 'location', 'event', 'article'])
//     ) {
//       $form['#attached']['library'][] = 'my_module/custom_css';
//     }
//   }
// }

/**
 * Perform alterations on language switcher links.
 *
 * A language switcher link may need to point to a different path or use a
 * translated link text before going through the link generator, which will
 * just handle the path aliases.
 *
 * @param array $links
 *   Nested array of links keyed by language code.
 * @param string $type
 *   The language type the links will switch.
 * @param \Drupal\Core\Url $url
 *   The URL the switch links will be relative to.
 */
function my_module_language_switch_links_alter(array &$links, $type, Url $url) {
  // Global $language;
  // unset($links[$language->language]);
  // kint($links);exit;
  $language_interface = \Drupal::languageManager()->getCurrentLanguage();
  $current_language_id = $language_interface->getId();
  unset($links[$current_language_id]);
}